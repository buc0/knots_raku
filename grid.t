$*OUT.out-buffer = Nil;
use lib <.>;
use PlottingGrid::Malleable;
my $g = Grid.new;
$g.plot( mark => '╪', ul-annotation => '1→' );
$g.de-encroach;
say $g.render-to-multiline-string;
say $g.render-to-multiline-string: with-annotations => False;
$g.advance;
$g.plot( mark => '╫', dl-annotation => '2→' );
$g.de-encroach;
say $g.render-to-multiline-string;
say $g.render-to-multiline-string: with-annotations => False;
$g.advance;
$g.plot( mark => '╪', ul-annotation => '3→' );
$g.de-encroach;
say $g.render-to-multiline-string;
say $g.render-to-multiline-string: with-annotations => False;
$g.advance;
$g.turn( relative => pd-right );
$g.advance;
say $g.render-to-multiline-string: with-annotations => False, with-head-location => False;
$g.turn( relative => pd-right );
$g.advance;
say $g.render-to-multiline-string: with-annotations => False, with-head-location => False;
$g.advance;
$g.advance;
$g.advance;
$g.advance;
$g.turn( relative => pd-right );
$g.advance;
say $g.render-to-multiline-string: with-annotations => False, with-head-location => False;
$g.plot( dl-annotation => '4↑' );
$g.de-encroach;
say $g.render-to-multiline-string;
say $g.render-to-multiline-string: with-annotations => False;
$g.advance;
$g.turn( relative => pd-right );
$g.advance;
say $g.render-to-multiline-string: with-annotations => False, with-head-location => False;
$g.advance;
$g.turn( relative => pd-right );
$g.advance;
say $g.render-to-multiline-string: with-annotations => False, with-head-location => False;
$g.plot( ul-annotation => '5↓' );
$g.de-encroach;
say $g.render-to-multiline-string;
say $g.render-to-multiline-string: with-annotations => False;
$g.advance;
$g.turn( relative => pd-left );
$g.advance;
say $g.render-to-multiline-string: with-annotations => False, with-head-location => False;
$g.advance;
$g.turn( relative => pd-left );
$g.advance;
say $g.render-to-multiline-string: with-annotations => False, with-head-location => False;
$g.plot( dl-annotation => '6↑' );
$g.de-encroach;
say $g.render-to-multiline-string;
say $g.render-to-multiline-string: with-annotations => False;
$g.advance;
$g.advance;
$g.advance;
$g.turn( relative => pd-left );
$g.advance;
say $g.render-to-multiline-string: with-annotations => False, with-head-location => False;
$g.advance;
$g.advance;
$g.advance;
$g.advance;
$g.turn( relative => pd-left );
$g.advance;
$g.advance;
$g.advance;
$g.turn( relative => pd-left );
$g.advance;
say $g.render-to-multiline-string: with-annotations => False, with-head-location => False;
$g.de-encroach;
say $g.render-to-multiline-string;
say $g.render-to-multiline-string: with-annotations => False;
$g.condense;
say $g.render-to-multiline-string;
say $g.render-to-multiline-string: with-frame => False;
say $g.render-to-multiline-string: with-frame-marks => False;
say $g.render-to-multiline-string: with-head-location => False;
say $g.render-to-multiline-string: with-annotations => False;
say $g.render-to-multiline-string: with-frame => False, with-head-location => False, with-annotations => False;
my $h = $g.clone;
say $h.render-to-multiline-string;
